apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: activemq-artemis-resources
      namespace: operator-lifecycle-manager
    data:
      clusterServiceVersions: |
        - apiVersion: operators.coreos.com/v1alpha1
          kind: ClusterServiceVersion
          metadata:
            name: activemq-artemis-operator.v0.9.1
            namespace: placeholder
            annotations:
              categories: "Streaming & Messaging"
              certified: "false"
              description: ActiveMQ Artemis Operator provides the ability to deploy and manage stateful ActiveMQ Artemis broker clusters
              containerImage: quay.io/hgao/operator:v3198
              createdAt: 2019-12-09T08:16:32Z
              capabilities: Basic Install
              repository: https://github.com/rh-messaging/activemq-artemis-operator
              support: Red Hat, Inc.
              tectonic-visibility: ocs
              alm-examples: >-
                [{
                    "apiVersion": "broker.amq.io/v2alpha1",
                    "kind": "ActiveMQArtemis",
                    "metadata": {
                        "name": "ex-aao"
                    },
                    "spec": {
                        "deploymentPlan": {
                            "size": 1,
                            "image": "quay.io/hgao/amq-openshift-image:amq743LTS"
                        }
                    }
                },
                {
                    "apiVersion": "broker.amq.io/v2alpha1",
                    "kind": "ActiveMQArtemisAddress",
                    "metadata": {
                        "name": "ex-aaoaddress"
                    },
                    "spec": {
                        "addressName": "myAddress0",
                        "queueName": "myQueue0",
                        "routingType": "anycast"
                    }
                },
                {
                    "apiVersion": "broker.amq.io/v2alpha1",
                    "kind": "ActiveMQArtemisScaledown",
                    "metadata": {
                        "name": "ex-aaoscaledown"
                    },
                    "spec": {
                        "localOnly": "true"
                    }
                }]
          labels:
            operator-activemqartemis: "true"
          spec:
            displayName: ActiveMQ Artemis
            description: ActiveMQ Artemis Operator provides the ability to deploy and manage stateful ActiveMQ Artemis broker clusters
            keywords:
              - activemqartemis
              - operator
            version: 0.9.1
            maturity: alpha
            maintainers:
              - name: Red Hat, Inc.
                email: rkieley@redhat.com
            provider:
              name: Red Hat, Inc.
            links:
              - name: Product Page
                url: https://access.redhat.com/products/red-hat-amq/
              - name: Documentation
                url: https://access.redhat.com/documentation/en-us/red_hat_amq/
            icon:
              - base64data:iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAACXLAAAlywEaR2RmAAAER0lEQVRYhb2XS0xcVRyHv3PmzstSGLCF4kyAIKDioiXTxgjadqkkXZhWRdOoSzdNExdNNepG07rpwrSJK+PCND6CYUGsVtJFiTYaMjSmgSkS24YZ3hZwmHuZuTP3HhfM4ADz6hT9rc7jf873u+d9BWXqZgs+j6IXxRHgEIIAiloABMsoosAIgusJwZWue6yU068oFRD204HGWRSvAo+U6dcAvsXi/FPT/FGRgUgAb9zBxyhOAc4ywVuVQnBRT/HBwRmMsg2MB2gXkgHg6QrBWzWmbF7qjDJZ0sBYM10SrqLYu0PwLGnRULwYnCJU0MB4gHbh4JcdhwOGDbrNslPR8+ws4Wy5zCYiAbxCMvAfwgFqU4KBqw3sytZp2URmwRWcc1HfzpMj26awLA37N2Wf8Dr4BDgFmREI++nIrPaCcjR3VAQvoLeH99G5YQAH71L5VqtEGpL3AOTNFnzAK/8jPKvjv/l5VHoUvZRxwtnRuzttwJOEYxqKo+VE27PjhJuLxxg2BCPr6V/f6MO89nXReKk4ogEHcwu9J8/gamtfz1jpgo1ThoGVc4zEhn5AHx1ah7/5Gua1r4q7BWwIaplbbUN1L/ex+0BX0YYJXWdVj5PQDaRD4nR7WE2ZMDrEsB9MSsMBJDRpG1dqjtZWYywsLOByezBNk+bW1hx4nFXdQFkW05EI7qoq6hsaygJulQ3VWr4Kz64qHvO7EA6Jsv8dniwcIRBSUlNXi+ZyI6XM101Z0oAloD5bsDY5gXS7cDf60Xw+bNNEH7tF2jTR43GUWJ/3tAJvpk1yfg5zauqB4RJiItzEKLBt0rXnTtD06WcIh4M/D9Rtqss52x9WtzRgJJ+B9M/9TJ2Gxg8/yjhy4+07jSklDgXVhbq0LFLJBNmL1jZ0koOf5w2VEBLhZl5HcblQf8JVhTLjaId6aev/vvj3KEVseRkjmUAgsCwLaZpMPv94fgOCt2RCcAXyP5cAlBkHIJH5otloBD0W4/eREcxkcjN8ZZmkZXF/8S9WF+aI3r1TzG5CCgZl1z1WEHxTLNKwwchsBl+ND4/XS1NLC06nMwe+QjJtAeByOtHcHrxeb4EeAfiuO8qSBqAszgvJSfLciNkF51xZwpifQyAwDQMPkFhcBED/e4VEKgWAtrsa3549KNvCadskF+bzwdPYnIOcJ1m4mQso3skHfxA1fvEj1fv3M3v5S2IXzhQKu3R4JudBAlBl8T4w9jBwAJVOl4JPrFmczWY2PUrHArRJBzcMi72V7nPZGsS+EypUvaRBT/cMt/MaAAg1EdTT/ATUba17SC05bF7omWMkt3DbIR6cIqRBDzCxg/AJDXq2wvMaAOie4XaNRVDCRaDwo6C00sClGotg7rDnquTP6fA+OjMPyOOAp0xwEujH5tzhOcaLBZY0kNWNAHW24hiKozYEJTTZmStBQsyGKQkhW3DdDYPPTHO/nH7/AQDFo5Dow5MRAAAAAElFTkSuQmCC
                mediatype: image/png
            labels:
              alm-owner-amq-broker: activemq-artemis-operator
              operated-by: activemq-artemis-operator.v0.9.1
            selector:
              matchLabels:
                ActiveMQArtemis: ex-aao
                application: ex-aao-app
                operated-by: activemq-artemis-operator.v0.9.1
            installModes:
              - type: OwnNamespace
                supported: true
              - type: SingleNamespace
                supported: false
              - type: MultiNamespace
                supported: false
              - type: AllNamespaces
                supported: false
            customresourcedefinitions:
              owned:
                - name: activemqartemises.broker.amq.io
                  version: v2alpha1
                  versions:
                    - name: v2alpha1
                      served: true
                      storage: true
                    - name: v1alpha1
                      served: false
                      storage: false
                  kind: ActiveMQArtemis
                  description: An instance of Active MQ Artemis
                  displayName: ActiveMQ Artemis
                  resources:
                    - kind: Service
                      version: v1
                    - kind: Route
                      version: v1
                    - kind: StatefulSet
                      version: v1
                    - kind: Secret
                      version: v1
                  specDescriptors:
                    - description: User name for standard broker user. It is required for connecting to the broker and the web console. If left empty, it will be generated.
                      displayName: AdminUser
                      path: adminUser
                    - description: Password for standard broker user. It is required for connecting to the broker and the web console. If left empty, it will be generated.
                      displayName: AdminPassword
                      path: adminPassword
                    - description: The number of broker pods to deploy
                      displayName: Size
                      path: size
                    - description: The image used for the broker deployment
                      displayName: Image
                      path: image
                    - description: If true require user password login credentials for broker protocol ports
                      displayName: RequireLogin
                      path: requireLogin
                    - description: If true use persistent volume via persistent volume claim for journal storage
                      displayName: PersistenceEnabled
                      path: persistenceEnabled
                    - description: If aio use ASYNCIO, if nio use NIO for journal IO
                      displayName: JournalType
                      path: journalType
                    - description: If true migrate messages on scaledown
                      displayName: MessageMigration
                      path: messageMigration
                - name: activemqartemisaddresses.broker.amq.io
                  version: v2alpha1
                  kind: ActiveMQArtemisAddress
                  description: Adding and removing addresses via custom resource definitions
                  displayName: ActiveMQ Artemis Address
                  specDescriptors:
                    - description: The Queue Name
                      displayName: Queue Name
                      path: queueName
                    - description: The Address Name
                      displayName: Address Name
                      path: addressName
                    - description: The Routing Type
                      displayName: Routing Type
                      path: routingType
                - name: activemqartemisscaledowns.broker.amq.io
                  version: v2alpha1
                  kind: ActiveMQArtemisScaledown
                  description: Provides message migration on clustered broker scaledown
                  displayName: ActiveMQ Artemis Scaledown
                  specDescriptors:
                    - description: Triggered by main ActiveMQArtemis CRD messageMigration entry
                      displayName: LocalOnly
                      path: localOnly
            install:
              strategy: deployment
              spec:
                permissions:
                  - serviceAccountName: activemq-artemis-operator
                    rules:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                          - services
                          - endpoints
                          - persistentvolumeclaims
                          - events
                          - configmaps
                          - secrets
                          - routes
                        verbs:
                          - '*'
                      - apiGroups:
                          - ""
                        resources:
                          - namespaces
                        verbs:
                          - get
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - daemonsets
                          - replicasets
                          - statefulsets
                        verbs:
                          - '*'
                      - apiGroups:
                          - monitoring.coreos.com
                        resources:
                          - servicemonitors
                        verbs:
                          - get
                          - create
                      - apiGroups:
                          - broker.amq.io
                        resources:
                          - '*'
                        verbs:
                          - '*'
                      - apiGroups:
                          - "route.openshift.io"
                        resources:
                          - routes
                          - routes/custom-host
                          - routes/status
                        verbs:
                          - get
                          - list
                          - watch
                          - create
                          - delete
          
                deployments:
                  - name: activemq-artemis-operator
                    spec:
                      replicas: 1
                      selector:
                        matchLabels:
                          name: activemq-artemis-operator
                      template:
                        metadata:
                          labels:
                            name: activemq-artemis-operator
                        spec:
                          serviceAccountName: activemq-artemis-operator
                          containers:
                            - name: activemq-artemis-operator
                              image: quay.io/hgao/operator:v3198
                              command:
                                -  /home/activemq-artemis-operator/bin/entrypoint
                              imagePullPolicy: Always
                              env:
                                - name: WATCH_NAMESPACE
                                  valueFrom:
                                    fieldRef:
                                      fieldPath: metadata.namespace
                                - name: POD_NAME
                                  valueFrom:
                                    fieldRef:
                                      fieldPath: metadata.name
                                - name: OPERATOR_NAME
                                  value: "activemq-artemis-operator"
      customResourceDefinitions: |
        - apiVersion: apiextensions.k8s.io/v1beta1
          kind: CustomResourceDefinition
          metadata:
            creationTimestamp: null
            name: activemqartemises.broker.amq.io
          spec:
            group: broker.amq.io
            names:
              kind: ActiveMQArtemis
              listKind: ActiveMQArtemisList
              plural: activemqartemises
              singular: activemqartemis
            scope: Namespaced
            subresources:
              scale:
                specReplicasPath: .spec.replicas
                statusReplicasPath: .status.replicas
              status: {}
            validation:
              openAPIV3Schema:
                required:
                  - spec
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  metadata:
                    type: object
                  spec:
                    adminUser:
                      type: string
                      description: User name for standard broker user. It is required for connecting to the broker. If left empty, it will be generated.
                    adminPassword:
                      type: string
                      description: Password for standard broker user. It is required for connecting to the broker. If left empty, it will be generated.
                    deploymentPlan:
                      type: object
                      properties:
                        image:
                          type: string
                          description: The image used for the broker deployment
                        size:
                          type: integer
                          minimum: 0
                          maximum: 16
                          description: The number of broker pods to deploy
                        requireLogin:
                          type: boolean
                          description: If true require user password login credentials for broker protocol ports
                        persistenceEnabled:
                          type: boolean
                          description: If true use persistent volume via persistent volume claim for journal storage
                        journalType:
                          type: string
                          description: If aio use ASYNCIO, if nio use NIO for journal IO
                        messageMigration:
                          type: boolean
                          description: If true migrate messages on scaledown
                    acceptors:
                      type: array
                      description: Configuration of all acceptors
                      minItems: 0
                      items:
                        type: object
                        description: A single acceptor configuration
                        properties:
                          name:
                            type: string
                            description: The name of the acceptor
                          port:
                            type: integer
                            description: Port number
                          protocols:
                            type: string
                            description: The protocols to enable for this acceptor
                          sslEnabled:
                            type: boolean
                            description: Whether or not to enable SSL on this port
                          sslSecret:
                            type: string
                            description: Name of the secret to use for ssl information
                          enabledCipherSuites:
                            type: string
                            description: Comma separated list of cipher suites used for SSL communication.
                          enabledProtocols:
                            type: string
                            description: Comma separated list of protocols used for SSL communication.
                          needClientAuth:
                            type: boolean
                            description: Tells a client connecting to this acceptor that 2-way SSL is required. This property takes precedence over wantClientAuth.
                          wantClientAuth:
                            type: boolean
                            description: Tells a client connecting to this acceptor that 2-way SSL is requested but not required. Overridden by needClientAuth.
                          verifyHost:
                            type: boolean
                            description: The CN of the connecting client's SSL certificate will be compared to its hostname to verify they match. This is useful only for 2-way SSL.
                          sslProvider:
                            type: string
                            description: Used to change the SSL Provider between JDK and OPENSSL. The default is JDK.
                          sniHost:
                            type: string
                            description: A regular expression used to match the server_name extension on incoming SSL connections. If the name doesn't match then the connection to the acceptor will be rejected.
                          expose:
                            type: boolean
                            description: Whether or not to expose this acceptor
                          anycastPrefix:
                            type: string
                            description: To indicate which kind of routing type to use.
                          multicastPrefix:
                            type: string
                            description: To indicate which kind of routing type to use.
                          connectionsAllowed:
                            type: integer
                            description: Limits the number of connections which the acceptor will allow. When this limit is reached a DEBUG level message is issued to the log, and the connection is refused.
                    connectors:
                      type: array
                      description: Configuration of all connectors
                      minItems: 0
                      items:
                        type: object
                        description: A single connector configuration
                        properties:
                          name:
                            type: string
                            description: The name of the acceptor
                          type:
                            type: string
                            description: The type either tcp or vm
                          host:
                            type: string
                            description: Hostname or IP to connect to
                          port:
                            type: integer
                            description: Port number
                          sslEnabled:
                            type: boolean
                            description: Whether or not to enable SSL on this port
                          sslSecret:
                            type: string
                            description: Name of the secret to use for ssl information
                          enabledCipherSuites:
                            type: string
                            description: Comma separated list of cipher suites used for SSL communication.
                          enabledProtocols:
                            type: string
                            description: Comma separated list of protocols used for SSL communication.
                          needClientAuth:
                            type: boolean
                            description: Tells a client connecting to this acceptor that 2-way SSL is required. This property takes precedence over wantClientAuth.
                          wantClientAuth:
                            type: boolean
                            description: Tells a client connecting to this acceptor that 2-way SSL is requested but not required. Overridden by needClientAuth.
                          verifyHost:
                            type: boolean
                            description: The CN of the connecting client's SSL certificate will be compared to its hostname to verify they match. This is useful only for 2-way SSL.
                          sslProvider:
                            type: string
                            description: Used to change the SSL Provider between JDK and OPENSSL. The default is JDK.
                          sniHost:
                            type: string
                            description: A regular expression used to match the server_name extension on incoming SSL connections. If the name doesn't match then the connection to the acceptor will be rejected.
                          expose:
                            type: boolean
                            description: Whether or not to expose this connector
                    console:
                      type: object
                      description: Configuration for the embedded web console
                      properties:
                        expose:
                          type: boolean
                          description: Whether or not to expose this port
                        sslEnabled:
                          type: boolean
                          description: Whether or not to enable SSL on this port
                        sslSecret:
                          type: string
                          description: Name of the secret to use for ssl information
                        useClientAuth:
                          type: boolean
                          description: If the embedded server requires client authentication
                  status:
                    properties:
                      podStatus:
                        properties:
                          ready:
                            items:
                              type: string
                            type: array
                          starting:
                            items:
                              type: string
                            type: array
                          stopped:
                            items:
                              type: string
                            type: array
                        type: object
                    required:
                      - podStatus
                    type: object
            version: v2alpha1
            versions:
            - name: v2alpha1
              served: true
              storage: true
            - name: v1alpha1
              served: false
              storage: false
        - apiVersion: apiextensions.k8s.io/v1beta1
          kind: CustomResourceDefinition
          metadata:
            creationTimestamp: null
            name: activemqartemisaddresses.broker.amq.io
          spec:
            group: broker.amq.io
            names:
              kind: ActiveMQArtemisAddress
              listKind: ActiveMQArtemisAddressList
              plural: activemqartemisaddresses
              singular: activemqartemisaddress
            scope: Namespaced
            subresources:
              status: {}
            validation:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  metadata:
                    type: object
                  spec:
                    properties:
                      addressName:
                        type: string
                      queueName:
                        type: string
                      routingType:
                        type: string
                    required:
                      - addressName
                      - queueName
                      - routingType
                    type: object
                  status:
                    type: object
            version: v2alpha1
            versions:
            - name: v2alpha1
              served: true
              storage: true
            - name: v1alpha2
              served: true
              storage: false
            - name: v1alpha1
              served: false
              storage: false
        - apiVersion: apiextensions.k8s.io/v1beta1
          kind: CustomResourceDefinition
          metadata:
            creationTimestamp: null
            name: activemqartemisscaledowns.broker.amq.io
          spec:
            group: broker.amq.io
            names:
              kind: ActiveMQArtemisScaledown
              listKind: ActiveMQArtemisScaledownList
              plural: activemqartemisscaledowns
              singular: activemqartemisscaledown
            scope: Namespaced
            subresources:
              status: {}
            validation:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    properties:
                      localOnly:
                        description: 'If enabled, the controller only handles StatefulSets in a
                          single namespace instead of across all namespaces.'
                        type: boolean
                    required:
                      - localOnly
                    type: object
                  status:
                    type: object
            version: v2alpha1
            versions:
            - name: v2alpha1
              served: true
              storage: true
            - name: v1alpha1
              served: false
              storage: false
      packages: >
        - packageName: howard-operator-test
          channels:
            - name: alpha
              currentCSV: activemq-artemis-operator.v0.9.1

  - apiVersion: operators.coreos.com/v1alpha1
    kind: CatalogSource
    metadata:
      name: activemq-artemis-resources
      namespace: operator-lifecycle-manager
    spec:
      configMap: activemq-artemis-resources
      displayName: ActiveMQ Artemis Operator
      publisher: Red Hat
      sourceType: internal
    status:
      configMapReference:
        name: activemq-artemis-resources
        namespace: operator-lifecycle-manager
